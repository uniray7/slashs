type Subscription {
  messageCreated: Message!
}

type Mutation {
  createMessage(text: String!, userId: ID!, channelId: ID!): Message
  createUser(name: String!): User
}

type Query {
  hello: String
  # messages: [Message]
  users: [User]
  user(id: ID!): User
  channel(id: ID!): DirectChannel
  channels: [DirectChannel]
}

scalar DateTime

type User {
  id: ID!
  name: String!
}

type DirectChannel {
  id: ID!
  user1: User!
  user2: User!
  messages: [Message]!
}

type Message {
  id: ID!
  user: User!
  text: String!
  channel: DirectChannel!
  createdAt: DateTime!
}